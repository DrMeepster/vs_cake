//-----------------------------------------------------------------------
//------------------- Copyright (c) samisalreadytaken -------------------
//                       github.com/samisalreadytaken
//-----------------------------------------------------------------------
if(!("Glow"in::getroottable())||typeof::Glow!="table"||!("Set"in::Glow)){::Glow<-{function Set(S,C,T,D){local g=Get(S);if(g){if(DEBUG)::print("Glow::Set: Updating glow ["+S.entindex()+"]\n")}else{if(DEBUG)::print("Glow::Set: Setting glow ["+S.entindex()+"]\n");foreach(e in _list)if(e.IsValid()){local p=e.GetMoveParent();if(!p||!p.IsValid()){g=e;break}};if(g)g.SetModel(S.GetModelName());else{g=::CreateProp("prop_dynamic_glow",S.GetOrigin(),S.GetModelName(),0);_list.append(g)};::VS.SetKeyInt(g,"rendermode",6);::VS.SetKeyInt(g,"renderamt",0);::VS.SetParent(g,S);::VS.MakePermanent(g)};if(typeof C=="string")::VS.SetKeyString(g,"glowcolor",C);else if(typeof C=="Vector")::VS.SetKeyVector(g,"glowcolor",C);else throw"parameter 2 has an invalid type '"+typeof C+"' ; expected 'string|Vector'";;::VS.SetKeyInt(g,"glowstyle",T);::VS.SetKeyInt(g,"glowdist",D);::VS.SetKeyInt(g,"glowenabled",1);::VS.SetKeyInt(g,"effects",EF_DEFAULT);return g}function Disable(S){local g=Get(S);if(g){::VS.SetKeyInt(g,"effects",EF_DEFAULT|EF_NODRAW);::VS.SetParent(g,null);::EntFireByHandle(g,"setglowdisabled");if(DEBUG)::print("Glow::Disable: Disabled glow ["+S.entindex()+"]\n")}else{if(DEBUG)::print("Glow::Disable: No glow found ["+S.entindex()+"]\n")};return g}function Get(S){if(!S.GetModelName().len())throw"Glow: Invalid source entity";foreach(i,p in _list)if(p.IsValid()){if(p.GetMoveParent()==S)return p}else _list.remove(i)}DEBUG=false,EF_DEFAULT=(1<<0|1<<11)|1<<14,EF_NODRAW=1<<5,_list=[]}};;
